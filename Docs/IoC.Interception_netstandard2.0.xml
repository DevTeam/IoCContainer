<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IoC.Interception</name>
    </assembly>
    <members>
        <member name="T:IoC.Features.FluentInterception">
            <summary>
            Represents extensions to add interceptions to the container.
            </summary>
        </member>
        <member name="M:IoC.Features.FluentInterception.Intercept(IoC.IContainer,System.Type[])">
            <summary>
            Intercepts types.
            </summary>
            <param name="container">The target container.</param>
            <param name="types">The contract types to intercept.</param>
            <returns>The binding token.</returns>
        </member>
        <member name="M:IoC.Features.FluentInterception.Intercept``1(IoC.IContainer)">
            <summary>
            Intercepts the type.
            </summary>
            <typeparam name="T">The contract type.</typeparam>
            <param name="container">The target container.</param>
            <returns>The binding token.</returns>
        </member>
        <member name="M:IoC.Features.FluentInterception.Tag``1(IoC.Features.IInterception{``0},System.Object)">
            <summary>
            Marks the binding by the tag. Is it possible to use multiple times.
            </summary>
            <typeparam name="T">The instance type.</typeparam>
            <param name="interception"></param>
            <param name="tagValue"></param>
            <returns>The binding token.</returns>
        </member>
        <member name="M:IoC.Features.FluentInterception.AnyTag``1(IoC.Features.IInterception{``0})">
            <summary>
            Marks the interception to be used for any tags.
            </summary>
            <typeparam name="T">The instance type.</typeparam>
            <param name="interception">The interception token.</param>
            <returns>The binding token.</returns>
        </member>
        <member name="M:IoC.Features.FluentInterception.By(IoC.Features.IInterception{System.Object},Castle.DynamicProxy.IInterceptor[])">
            <summary>
            Apply the interceptor.
            </summary>
            <param name="interception">The interception token.</param>
            <param name="interceptors">The list of interceptors.</param>
            <returns>The interception token.</returns>
        </member>
        <member name="M:IoC.Features.FluentInterception.By``1(IoC.Features.IInterception{``0},Castle.DynamicProxy.IInterceptor[])">
            <summary>
            Apply the interceptor.
            </summary>
            <typeparam name="T">The instance type.</typeparam>
            <param name="interception">The interception token.</param>
            <param name="interceptors">The set of interceptors.</param>
            <returns>The interception token.</returns>
        </member>
        <member name="T:IoC.Features.IInterception`1">
            <summary>
            
            </summary>
        </member>
        <member name="P:IoC.Features.IInterception`1.Container">
            <summary>
            The target container.
            </summary>
        </member>
        <member name="P:IoC.Features.IInterception`1.Types">
            <summary>
            The types to intercept.
            </summary>
        </member>
        <member name="P:IoC.Features.IInterception`1.Tags">
            <summary>
            The tags to mark the binding.
            </summary>
        </member>
        <member name="T:IoC.Features.InterceptionFeature">
            <inheritdoc cref="T:IoC.IConfiguration" />
        </member>
        <member name="M:IoC.Features.InterceptionFeature.Apply(IoC.IContainer)">
            <inheritdoc />
        </member>
    </members>
</doc>
